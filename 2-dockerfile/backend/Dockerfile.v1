# backend/Dockerfile

# FROM: Utilizamos una imagen Node base que ya incluye el runtime y herramientas necesarias.
FROM node:20-alpine

# WORKDIR: Establece el directorio de trabajo dentro del contenedor
WORKDIR /app

# COPY: Copia los archivos de manifiesto de dependencias.
# Esto es clave para el caching de capas: si package*.json no cambia, Docker no reinstala npm.
COPY package*.json ./

# RUN: Instala las dependencias del proyecto (tanto de prod como dev para la compilación)
RUN npm install

# COPY: Copia el resto del código fuente y archivos de configuración (src/, tsconfig.json, etc.)
COPY . .

# RUN: Compila el código TypeScript a JavaScript (el output va a dist/)
RUN npm run build

# Opcional pero recomendado: Puerto que la aplicación expone (5000 por defecto)
EXPOSE 5000

# CMD: Comando de arranque por defecto (ejecuta el código compilado)
# Se ejecuta node dist/index.js (definido en "start" en package.json)
CMD ["npm", "start"]