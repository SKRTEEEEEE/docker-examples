# backend/Dockerfile

#########################################################
# Etapa 1: BUILD STAGE (Compilación y obtención de dependencias)
#########################################################
FROM node:20-alpine AS builder

# Establece el directorio de trabajo
WORKDIR /usr/src/app

# Copia los archivos de manifiesto para instalar dependencias
COPY package*.json ./

# RUN: Instala las dependencias (todas, incluyendo dev para tsc)
RUN npm install

# Copia el resto del código fuente (incluyendo src/)
COPY . .

# RUN: Compila TypeScript (la salida va a /usr/src/app/dist)
RUN npm run build

#########################################################
# Etapa 2: PRODUCTION STAGE (Imagen final ligera)
#########################################################
FROM node:20-alpine AS final

# Establece el directorio de trabajo (el mismo que el builder)
WORKDIR /usr/src/app

# COPY --from: Copia solo los archivos esenciales de la etapa 'builder'
# 1. Copia solo los node_modules de runtime
COPY --from=builder /usr/src/app/node_modules ./node_modules
# 2. Copia el código transpilado (el que ejecutaremos)
COPY --from=builder /usr/src/app/dist ./dist
# 3. Copia package.json (necesario para el comando 'npm start')
COPY --from=builder /usr/src/app/package.json .

# Puerto que la aplicación expone (5000)
EXPOSE 5000

# CMD: Comando de arranque por defecto (ejecuta el código compilado)
CMD ["npm", "start"]
