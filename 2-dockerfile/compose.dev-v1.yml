version: '3.9'

networks:
  frontend-net:
  backend-net:

volumes:
  mongo-data:      # named volume para MongoDB persistente

services:
  ts-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "4173:4173"
    volumes:
      - ./frontend:/app           # bind mount (watch / dev)
      - /app/node_modules         # volumen an칩nimo para node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      - ts-backend
    networks:
      - frontend-net

  ts-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app            # bind mount (watch / dev)
      - /app/node_modules         # volumen an칩nimo para node_modules
    environment:
      - MONGO_URI=mongodb://mongodb-container:27017/notesdb
      - PORT=5000
      - NODE_ENV=development
    depends_on:
      - mongodb-container
    networks:
      - backend-net
      - frontend-net              # el backend est치 en ambas redes

  mongodb-container:
    image: mongo:7
    volumes:
      - mongo-data:/data/db      # named volume
    networks:
      - backend-net

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf:ro   # bind mount de configuraci칩n
    depends_on:
      - ts-frontend
      - ts-backend
    networks:
      - frontend-net
      - backend-net
